package com.e7e.hani.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.e7e.hani.vo.Idol;

import jakarta.annotation.PostConstruct;
import lombok.extern.slf4j.Slf4j;

@Slf4j	// simple log4j (log4j에서 주로 사용하는 기능을 모아뒀다!)
@RestController
@RequestMapping("/hani")
public class HaniController {
	
	// DB까지 하면 복잡해져서 일단은 메모리상에서 관리
	private static List<Idol> idols = new ArrayList<>();

	@PostConstruct	// 객체 생성 뒤에 자동 실행
	public void myInit() {
		
		Idol idol = null;
		
		for(int i=1; i<=7; i++) {
			idol = new Idol();
			idol.setSid(i);
			idol.setName("아이돌이름" + i);
			idol.setAge(20 + i);
			idols.add(idol);
		}
	}
	
	
	// 리스트
	@GetMapping("/idols")
	 public List<Idol> getIdols() {
		return idols;	
		// 잭슨 라이브러리가 동작해서 결과를 JSON 문자열을 바꾸어 줌
		// 그래서 자바객체인데도 화면에 띄우면 JSON 데이터처럼 브라우저에 보여줌
	}
	
	
	// 개별 찾기
	@GetMapping("/idols/{sid}")
	public Idol getIdol(@PathVariable int sid) {
		for (Idol idol : idols) {
			if(idol.getSid() == sid) {
				return idol;
			}
		}
		return null;	// 못 찾았다면?
	}
	
	
	// 생성
	@PostMapping("/idols") // ResponseBody가 생략되어있음을 잊지 맙시다
	public Idol insertIdol(@RequestBody Idol idol) {
		// 이 습관이 매우 중요하다! 개발자는 항상 값을 눈으로 봐야한다!
		log.debug("체킁{}", idol);	// 체킁Idol(sid=11, name=아이돌이름1, age=21)
		idols.add(idol);	// 추가
		return idol;
	}
	
	
	// 수정 (메서드가 바뀌니 URL 수정 필요없다)
	@PutMapping("/idols") // ResponseBody가 생략되어있음을 잊지 맙시다
	public Idol updIdol(@RequestBody Idol uidol) {
		// 이 습관이 매우 중요하다! 개발자는 항상 값을 눈으로 봐야한다!
		log.debug("체킁{}", uidol);	// 체킁Idol(sid=12, name=아이돌이름upd, age=21)
		
		for (Idol idol : idols) {
			if(idol.getSid() == uidol.getSid()) {
				idol.setName(uidol.getName());
				idol.setAge(uidol.getAge());
				break;
			}
		}
		return (uidol + "성공");
	}
	
}
